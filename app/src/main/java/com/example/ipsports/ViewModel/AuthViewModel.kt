package com.example.ipsports.ViewModel

import android.util.Patterns
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.example.ipsports.Model.Firebase.AuthResult
import com.example.ipsports.Model.Usecase.LoginUseCase
import com.example.ipsports.Model.Usecase.RegisterUseCase

/*

solo comunica los datos a la UI
ViewModel debe verificar lo siguiente:

El email no est치 vac칤o y tiene formato v치lido.
La contrase침a tiene al menos 8 caracteres y una may칰scula.
Las contrase침as coinciden.
El nombre, apellido y localidad no est치n vac칤os.
*/

class AuthViewModel(
    private val registerUseCase: RegisterUseCase,
    private val loginUseCase: LoginUseCase
) : ViewModel() {

    private val _authResult = MutableLiveData<AuthResult>()
    val authResult: LiveData<AuthResult> = _authResult

    fun registerUser(
        email: String,
        password: String,
        confirmPassword: String,
        name: String,
        surname: String,
        location: String
    ) {
        // 游댳 Estado de carga
        _authResult.value = AuthResult.Loading

        // 游댳 Validaci칩n 1: Campos no vac칤os
        if (email.isBlank() || name.isBlank() || surname.isBlank() || location.isBlank()) {
            _authResult.value = AuthResult.Failure(Exception("Todos los campos son obligatorios"))
            return
        }

        // 游댳 Validaci칩n 2: Email con formato v치lido
        if (!Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
            _authResult.value = AuthResult.Failure(Exception("Correo electr칩nico no v치lido"))
            return
        }

        // 游댳 Validaci칩n 3: Contrase침a con al menos 8 caracteres y una may칰scula
        if (!isValidPassword(password)) {
            _authResult.value = AuthResult.Failure(Exception("La contrase침a debe tener al menos 8 caracteres y una may칰scula"))
            return
        }

        // 游댳 Validaci칩n 4: Coincidencia de contrase침as
        if (password != confirmPassword) {
            _authResult.value = AuthResult.Failure(Exception("Las contrase침as no coinciden"))
            return
        }

        // 游댳 Si pasa las validaciones, intentar registrar al usuario
        registerUseCase(email, password, name, surname, location) { result ->
            _authResult.postValue(
                result.getOrNull()?.let { AuthResult.Success(it) }
                    ?: AuthResult.Failure(result.exceptionOrNull() ?: Exception("Error desconocido al registrar usuario"))
            )
        }
    }

    fun loginUser(email: String, password: String) {
        _authResult.value = AuthResult.Loading // 游댳 Estado de carga

        loginUseCase(email, password) { result ->
            _authResult.postValue(
                result.getOrNull()?.let { AuthResult.Success(it) }
                    ?: AuthResult.Failure(result.exceptionOrNull() ?: Exception("Error desconocido al iniciar sesi칩n"))
            )
        }
    }

    // 游댳 Funci칩n para validar la contrase침a (8 caracteres m칤nimo y al menos 1 may칰scula)
    private fun isValidPassword(password: String): Boolean {
        val passwordRegex = Regex("^(?=.*[A-Z]).{8,}$")
        return passwordRegex.matches(password)
    }
}

